# Generated by Django 5.2 on 2025-04-14 13:37

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import imagekit.models.fields
from django.conf import settings
from django.contrib.postgres.operations import HStoreExtension, TrigramExtension, UnaccentExtension
from django.db import migrations, models

import src.common.database.models.mixins.users
import src.common.database.models.tenant


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        HStoreExtension(),
        TrigramExtension(),
        UnaccentExtension(),
        migrations.CreateModel(
            name='EmailAddressORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'email',
                    models.EmailField(
                        db_index=True, max_length=254, unique=True, verbose_name='Email'
                    ),
                ),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified')),
            ],
            options={
                'verbose_name': 'Email Address',
                'verbose_name_plural': 'Email Addresses',
                'db_table': 'email_addresses',
            },
        ),
        migrations.CreateModel(
            name='PhoneNumberORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'iso_code',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('AC', 'AC'),
                            ('AD', 'AD'),
                            ('AE', 'AE'),
                            ('AF', 'AF'),
                            ('AG', 'AG'),
                            ('AI', 'AI'),
                            ('AL', 'AL'),
                            ('AM', 'AM'),
                            ('AO', 'AO'),
                            ('AQ', 'AQ'),
                            ('AR', 'AR'),
                            ('AS', 'AS'),
                            ('AT', 'AT'),
                            ('AU', 'AU'),
                            ('AW', 'AW'),
                            ('AX', 'AX'),
                            ('AZ', 'AZ'),
                            ('BA', 'BA'),
                            ('BB', 'BB'),
                            ('BD', 'BD'),
                            ('BE', 'BE'),
                            ('BF', 'BF'),
                            ('BG', 'BG'),
                            ('BH', 'BH'),
                            ('BI', 'BI'),
                            ('BJ', 'BJ'),
                            ('BL', 'BL'),
                            ('BM', 'BM'),
                            ('BN', 'BN'),
                            ('BO', 'BO'),
                            ('BQ', 'BQ'),
                            ('BR', 'BR'),
                            ('BS', 'BS'),
                            ('BT', 'BT'),
                            ('BV', 'BV'),
                            ('BW', 'BW'),
                            ('BY', 'BY'),
                            ('BZ', 'BZ'),
                            ('CA', 'CA'),
                            ('CV', 'CV'),
                            ('CC', 'CC'),
                            ('CD', 'CD'),
                            ('CF', 'CF'),
                            ('CG', 'CG'),
                            ('CH', 'CH'),
                            ('CI', 'CI'),
                            ('CK', 'CK'),
                            ('CL', 'CL'),
                            ('CM', 'CM'),
                            ('CN', 'CN'),
                            ('CO', 'CO'),
                            ('CP', 'CP'),
                            ('CR', 'CR'),
                            ('CU', 'CU'),
                            ('CW', 'CW'),
                            ('CX', 'CX'),
                            ('CY', 'CY'),
                            ('CZ', 'CZ'),
                            ('DE', 'DE'),
                            ('DG', 'DG'),
                            ('DJ', 'DJ'),
                            ('DK', 'DK'),
                            ('DM', 'DM'),
                            ('DO', 'DO'),
                            ('DZ', 'DZ'),
                            ('EA', 'EA'),
                            ('EC', 'EC'),
                            ('EE', 'EE'),
                            ('EG', 'EG'),
                            ('EH', 'EH'),
                            ('ER', 'ER'),
                            ('ES', 'ES'),
                            ('ET', 'ET'),
                            ('EU', 'EU'),
                            ('FI', 'FI'),
                            ('FJ', 'FJ'),
                            ('FK', 'FK'),
                            ('FM', 'FM'),
                            ('FO', 'FO'),
                            ('FR', 'FR'),
                            ('FX', 'FX'),
                            ('GA', 'GA'),
                            ('GB', 'GB'),
                            ('GD', 'GD'),
                            ('GE', 'GE'),
                            ('GF', 'GF'),
                            ('GG', 'GG'),
                            ('GH', 'GH'),
                            ('GI', 'GI'),
                            ('GL', 'GL'),
                            ('GM', 'GM'),
                            ('GN', 'GN'),
                            ('GP', 'GP'),
                            ('GQ', 'GQ'),
                            ('GR', 'GR'),
                            ('GS', 'GS'),
                            ('GT', 'GT'),
                            ('GU', 'GU'),
                            ('GW', 'GW'),
                            ('GY', 'GY'),
                            ('HK', 'HK'),
                            ('HM', 'HM'),
                            ('HN', 'HN'),
                            ('HR', 'HR'),
                            ('HT', 'HT'),
                            ('HU', 'HU'),
                            ('IC', 'IC'),
                            ('ID', 'ID'),
                            ('IE', 'IE'),
                            ('IL', 'IL'),
                            ('IM', 'IM'),
                            ('IN', 'IN'),
                            ('IO', 'IO'),
                            ('IQ', 'IQ'),
                            ('IR', 'IR'),
                            ('IS', 'IS'),
                            ('IT', 'IT'),
                            ('JE', 'JE'),
                            ('JM', 'JM'),
                            ('JO', 'JO'),
                            ('JP', 'JP'),
                            ('KE', 'KE'),
                            ('KG', 'KG'),
                            ('LA', 'LA'),
                            ('KH', 'KH'),
                            ('KI', 'KI'),
                            ('KM', 'KM'),
                            ('KN', 'KN'),
                            ('KP', 'KP'),
                            ('KR', 'KR'),
                            ('KW', 'KW'),
                            ('KY', 'KY'),
                            ('KZ', 'KZ'),
                            ('LB', 'LB'),
                            ('LC', 'LC'),
                            ('LI', 'LI'),
                            ('LK', 'LK'),
                            ('LR', 'LR'),
                            ('LS', 'LS'),
                            ('LT', 'LT'),
                            ('LU', 'LU'),
                            ('LV', 'LV'),
                            ('LY', 'LY'),
                            ('MA', 'MA'),
                            ('MC', 'MC'),
                            ('MD', 'MD'),
                            ('ME', 'ME'),
                            ('MF', 'MF'),
                            ('MG', 'MG'),
                            ('MH', 'MH'),
                            ('MK', 'MK'),
                            ('ML', 'ML'),
                            ('MM', 'MM'),
                            ('MN', 'MN'),
                            ('MO', 'MO'),
                            ('MP', 'MP'),
                            ('MQ', 'MQ'),
                            ('MR', 'MR'),
                            ('MS', 'MS'),
                            ('MT', 'MT'),
                            ('MU', 'MU'),
                            ('MV', 'MV'),
                            ('MW', 'MW'),
                            ('MX', 'MX'),
                            ('MY', 'MY'),
                            ('MZ', 'MZ'),
                            ('NA', 'NA'),
                            ('NC', 'NC'),
                            ('NE', 'NE'),
                            ('NF', 'NF'),
                            ('NG', 'NG'),
                            ('NI', 'NI'),
                            ('NL', 'NL'),
                            ('AN', 'AN'),
                            ('NO', 'NO'),
                            ('NP', 'NP'),
                            ('NR', 'NR'),
                            ('NU', 'NU'),
                            ('NZ', 'NZ'),
                            ('OM', 'OM'),
                            ('PA', 'PA'),
                            ('PE', 'PE'),
                            ('PF', 'PF'),
                            ('PG', 'PG'),
                            ('PH', 'PH'),
                            ('PK', 'PK'),
                            ('PL', 'PL'),
                            ('PM', 'PM'),
                            ('PN', 'PN'),
                            ('PR', 'PR'),
                            ('PS', 'PS'),
                            ('PT', 'PT'),
                            ('PW', 'PW'),
                            ('PY', 'PY'),
                            ('QA', 'QA'),
                            ('RE', 'RE'),
                            ('RO', 'RO'),
                            ('RS', 'RS'),
                            ('RU', 'RU'),
                            ('RW', 'RW'),
                            ('SA', 'SA'),
                            ('SB', 'SB'),
                            ('SC', 'SC'),
                            ('SD', 'SD'),
                            ('SE', 'SE'),
                            ('SG', 'SG'),
                            ('SH', 'SH'),
                            ('SI', 'SI'),
                            ('SJ', 'SJ'),
                            ('SK', 'SK'),
                            ('SL', 'SL'),
                            ('SM', 'SM'),
                            ('SN', 'SN'),
                            ('SO', 'SO'),
                            ('SR', 'SR'),
                            ('SS', 'SS'),
                            ('ST', 'ST'),
                            ('SU', 'SU'),
                            ('SV', 'SV'),
                            ('SX', 'SX'),
                            ('SY', 'SY'),
                            ('SZ', 'SZ'),
                            ('TA', 'TA'),
                            ('TC', 'TC'),
                            ('TD', 'TD'),
                            ('TF', 'TF'),
                            ('TG', 'TG'),
                            ('TH', 'TH'),
                            ('TL', 'TL'),
                            ('TJ', 'TJ'),
                            ('TK', 'TK'),
                            ('TM', 'TM'),
                            ('TN', 'TN'),
                            ('TO', 'TO'),
                            ('TR', 'TR'),
                            ('TT', 'TT'),
                            ('TV', 'TV'),
                            ('TW', 'TW'),
                            ('TZ', 'TZ'),
                            ('UA', 'UA'),
                            ('UG', 'UG'),
                            ('UK', 'UK'),
                            ('UM', 'UM'),
                            ('US', 'US'),
                            ('UY', 'UY'),
                            ('UZ', 'UZ'),
                            ('VA', 'VA'),
                            ('VC', 'VC'),
                            ('VE', 'VE'),
                            ('VG', 'VG'),
                            ('VI', 'VI'),
                            ('VN', 'VN'),
                            ('VU', 'VU'),
                            ('WF', 'WF'),
                            ('WS', 'WS'),
                            ('YE', 'YE'),
                            ('YT', 'YT'),
                            ('ZA', 'ZA'),
                            ('ZM', 'ZM'),
                            ('ZW', 'ZW'),
                            ('XX', 'XX'),
                        ],
                        max_length=3,
                        null=True,
                        verbose_name='Iso Code',
                    ),
                ),
                ('dial_code', models.SmallIntegerField(db_index=True, verbose_name='Dial Code')),
                (
                    'phone_number',
                    models.CharField(db_index=True, max_length=255, verbose_name='Phone Number'),
                ),
                (
                    'prefix',
                    models.CharField(
                        blank=True,
                        help_text='This is to solve numbers inconsistency, specially for Mexican and Brazilian numbers',
                        max_length=2,
                        null=True,
                        verbose_name='Prefix',
                    ),
                ),
                ('is_verified', models.BooleanField(default=False, verbose_name='Is Verified?')),
            ],
            options={
                'verbose_name': 'Phone Number',
                'verbose_name_plural': 'Phone Numbers',
                'db_table': 'phone_numbers',
                'unique_together': {('dial_code', 'phone_number')},
            },
        ),
        migrations.CreateModel(
            name='UserORM',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                (
                    'last_login',
                    models.DateTimeField(blank=True, null=True, verbose_name='last login'),
                ),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'username',
                    models.CharField(
                        error_messages={'unique': 'A user with that username already exists.'},
                        help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name='username',
                    ),
                ),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active.Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
                (
                    'email_address',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='database.emailaddressorm',
                        verbose_name='Email Address',
                    ),
                ),
                (
                    'phone_number',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='database.phonenumberorm',
                        verbose_name='Phone Number',
                    ),
                ),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TenantORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                (
                    'country_iso_code',
                    models.CharField(
                        choices=[
                            ('AC', 'AC'),
                            ('AD', 'AD'),
                            ('AE', 'AE'),
                            ('AF', 'AF'),
                            ('AG', 'AG'),
                            ('AI', 'AI'),
                            ('AL', 'AL'),
                            ('AM', 'AM'),
                            ('AO', 'AO'),
                            ('AQ', 'AQ'),
                            ('AR', 'AR'),
                            ('AS', 'AS'),
                            ('AT', 'AT'),
                            ('AU', 'AU'),
                            ('AW', 'AW'),
                            ('AX', 'AX'),
                            ('AZ', 'AZ'),
                            ('BA', 'BA'),
                            ('BB', 'BB'),
                            ('BD', 'BD'),
                            ('BE', 'BE'),
                            ('BF', 'BF'),
                            ('BG', 'BG'),
                            ('BH', 'BH'),
                            ('BI', 'BI'),
                            ('BJ', 'BJ'),
                            ('BL', 'BL'),
                            ('BM', 'BM'),
                            ('BN', 'BN'),
                            ('BO', 'BO'),
                            ('BQ', 'BQ'),
                            ('BR', 'BR'),
                            ('BS', 'BS'),
                            ('BT', 'BT'),
                            ('BV', 'BV'),
                            ('BW', 'BW'),
                            ('BY', 'BY'),
                            ('BZ', 'BZ'),
                            ('CA', 'CA'),
                            ('CV', 'CV'),
                            ('CC', 'CC'),
                            ('CD', 'CD'),
                            ('CF', 'CF'),
                            ('CG', 'CG'),
                            ('CH', 'CH'),
                            ('CI', 'CI'),
                            ('CK', 'CK'),
                            ('CL', 'CL'),
                            ('CM', 'CM'),
                            ('CN', 'CN'),
                            ('CO', 'CO'),
                            ('CP', 'CP'),
                            ('CR', 'CR'),
                            ('CU', 'CU'),
                            ('CW', 'CW'),
                            ('CX', 'CX'),
                            ('CY', 'CY'),
                            ('CZ', 'CZ'),
                            ('DE', 'DE'),
                            ('DG', 'DG'),
                            ('DJ', 'DJ'),
                            ('DK', 'DK'),
                            ('DM', 'DM'),
                            ('DO', 'DO'),
                            ('DZ', 'DZ'),
                            ('EA', 'EA'),
                            ('EC', 'EC'),
                            ('EE', 'EE'),
                            ('EG', 'EG'),
                            ('EH', 'EH'),
                            ('ER', 'ER'),
                            ('ES', 'ES'),
                            ('ET', 'ET'),
                            ('EU', 'EU'),
                            ('FI', 'FI'),
                            ('FJ', 'FJ'),
                            ('FK', 'FK'),
                            ('FM', 'FM'),
                            ('FO', 'FO'),
                            ('FR', 'FR'),
                            ('FX', 'FX'),
                            ('GA', 'GA'),
                            ('GB', 'GB'),
                            ('GD', 'GD'),
                            ('GE', 'GE'),
                            ('GF', 'GF'),
                            ('GG', 'GG'),
                            ('GH', 'GH'),
                            ('GI', 'GI'),
                            ('GL', 'GL'),
                            ('GM', 'GM'),
                            ('GN', 'GN'),
                            ('GP', 'GP'),
                            ('GQ', 'GQ'),
                            ('GR', 'GR'),
                            ('GS', 'GS'),
                            ('GT', 'GT'),
                            ('GU', 'GU'),
                            ('GW', 'GW'),
                            ('GY', 'GY'),
                            ('HK', 'HK'),
                            ('HM', 'HM'),
                            ('HN', 'HN'),
                            ('HR', 'HR'),
                            ('HT', 'HT'),
                            ('HU', 'HU'),
                            ('IC', 'IC'),
                            ('ID', 'ID'),
                            ('IE', 'IE'),
                            ('IL', 'IL'),
                            ('IM', 'IM'),
                            ('IN', 'IN'),
                            ('IO', 'IO'),
                            ('IQ', 'IQ'),
                            ('IR', 'IR'),
                            ('IS', 'IS'),
                            ('IT', 'IT'),
                            ('JE', 'JE'),
                            ('JM', 'JM'),
                            ('JO', 'JO'),
                            ('JP', 'JP'),
                            ('KE', 'KE'),
                            ('KG', 'KG'),
                            ('LA', 'LA'),
                            ('KH', 'KH'),
                            ('KI', 'KI'),
                            ('KM', 'KM'),
                            ('KN', 'KN'),
                            ('KP', 'KP'),
                            ('KR', 'KR'),
                            ('KW', 'KW'),
                            ('KY', 'KY'),
                            ('KZ', 'KZ'),
                            ('LB', 'LB'),
                            ('LC', 'LC'),
                            ('LI', 'LI'),
                            ('LK', 'LK'),
                            ('LR', 'LR'),
                            ('LS', 'LS'),
                            ('LT', 'LT'),
                            ('LU', 'LU'),
                            ('LV', 'LV'),
                            ('LY', 'LY'),
                            ('MA', 'MA'),
                            ('MC', 'MC'),
                            ('MD', 'MD'),
                            ('ME', 'ME'),
                            ('MF', 'MF'),
                            ('MG', 'MG'),
                            ('MH', 'MH'),
                            ('MK', 'MK'),
                            ('ML', 'ML'),
                            ('MM', 'MM'),
                            ('MN', 'MN'),
                            ('MO', 'MO'),
                            ('MP', 'MP'),
                            ('MQ', 'MQ'),
                            ('MR', 'MR'),
                            ('MS', 'MS'),
                            ('MT', 'MT'),
                            ('MU', 'MU'),
                            ('MV', 'MV'),
                            ('MW', 'MW'),
                            ('MX', 'MX'),
                            ('MY', 'MY'),
                            ('MZ', 'MZ'),
                            ('NA', 'NA'),
                            ('NC', 'NC'),
                            ('NE', 'NE'),
                            ('NF', 'NF'),
                            ('NG', 'NG'),
                            ('NI', 'NI'),
                            ('NL', 'NL'),
                            ('AN', 'AN'),
                            ('NO', 'NO'),
                            ('NP', 'NP'),
                            ('NR', 'NR'),
                            ('NU', 'NU'),
                            ('NZ', 'NZ'),
                            ('OM', 'OM'),
                            ('PA', 'PA'),
                            ('PE', 'PE'),
                            ('PF', 'PF'),
                            ('PG', 'PG'),
                            ('PH', 'PH'),
                            ('PK', 'PK'),
                            ('PL', 'PL'),
                            ('PM', 'PM'),
                            ('PN', 'PN'),
                            ('PR', 'PR'),
                            ('PS', 'PS'),
                            ('PT', 'PT'),
                            ('PW', 'PW'),
                            ('PY', 'PY'),
                            ('QA', 'QA'),
                            ('RE', 'RE'),
                            ('RO', 'RO'),
                            ('RS', 'RS'),
                            ('RU', 'RU'),
                            ('RW', 'RW'),
                            ('SA', 'SA'),
                            ('SB', 'SB'),
                            ('SC', 'SC'),
                            ('SD', 'SD'),
                            ('SE', 'SE'),
                            ('SG', 'SG'),
                            ('SH', 'SH'),
                            ('SI', 'SI'),
                            ('SJ', 'SJ'),
                            ('SK', 'SK'),
                            ('SL', 'SL'),
                            ('SM', 'SM'),
                            ('SN', 'SN'),
                            ('SO', 'SO'),
                            ('SR', 'SR'),
                            ('SS', 'SS'),
                            ('ST', 'ST'),
                            ('SU', 'SU'),
                            ('SV', 'SV'),
                            ('SX', 'SX'),
                            ('SY', 'SY'),
                            ('SZ', 'SZ'),
                            ('TA', 'TA'),
                            ('TC', 'TC'),
                            ('TD', 'TD'),
                            ('TF', 'TF'),
                            ('TG', 'TG'),
                            ('TH', 'TH'),
                            ('TL', 'TL'),
                            ('TJ', 'TJ'),
                            ('TK', 'TK'),
                            ('TM', 'TM'),
                            ('TN', 'TN'),
                            ('TO', 'TO'),
                            ('TR', 'TR'),
                            ('TT', 'TT'),
                            ('TV', 'TV'),
                            ('TW', 'TW'),
                            ('TZ', 'TZ'),
                            ('UA', 'UA'),
                            ('UG', 'UG'),
                            ('UK', 'UK'),
                            ('UM', 'UM'),
                            ('US', 'US'),
                            ('UY', 'UY'),
                            ('UZ', 'UZ'),
                            ('VA', 'VA'),
                            ('VC', 'VC'),
                            ('VE', 'VE'),
                            ('VG', 'VG'),
                            ('VI', 'VI'),
                            ('VN', 'VN'),
                            ('VU', 'VU'),
                            ('WF', 'WF'),
                            ('WS', 'WS'),
                            ('YE', 'YE'),
                            ('YT', 'YT'),
                            ('ZA', 'ZA'),
                            ('ZM', 'ZM'),
                            ('ZW', 'ZW'),
                            ('XX', 'XX'),
                        ],
                        default='MX',
                        max_length=3,
                        verbose_name='Country',
                    ),
                ),
                (
                    'lang',
                    models.CharField(
                        choices=[('es', 'es'), ('en', 'en')],
                        default='es',
                        max_length=3,
                        verbose_name='Language',
                    ),
                ),
                (
                    'timezone',
                    models.CharField(
                        choices=[
                            ('UTC', 'UTC'),
                            ('America/Mexico_City', 'America/Mexico_City'),
                            ('Mexico/BajaNorte', 'Mexico/BajaNorte'),
                            ('Mexico/BajaSur', 'Mexico/BajaSur'),
                            ('Mexico/General', 'Mexico/General'),
                            ('America/La_Paz', 'America/La_Paz'),
                            ('Asia/Kabul', 'Asia/Kabul'),
                            ('Europe/Mariehamn', 'Europe/Mariehamn'),
                            ('Europe/Tirane', 'Europe/Tirane'),
                            ('Africa/Algiers', 'Africa/Algiers'),
                            ('Pacific/Pago_Pago', 'Pacific/Pago_Pago'),
                            ('Africa/Luanda', 'Africa/Luanda'),
                            ('America/Anguilla', 'America/Anguilla'),
                            ('Antarctica/McMurdo', 'Antarctica/McMurdo'),
                            ('America/Antigua', 'America/Antigua'),
                            ('America/Argentina/Buenos_Aires', 'America/Argentina/Buenos_Aires'),
                            ('Asia/Yerevan', 'Asia/Yerevan'),
                            ('America/Aruba', 'America/Aruba'),
                            ('Australia/Sydney', 'Australia/Sydney'),
                            ('Europe/Vienna', 'Europe/Vienna'),
                            ('Asia/Baku', 'Asia/Baku'),
                            ('America/Nassau', 'America/Nassau'),
                            ('Asia/Bahrain', 'Asia/Bahrain'),
                            ('Asia/Dhaka', 'Asia/Dhaka'),
                            ('America/Barbados', 'America/Barbados'),
                            ('Europe/Minsk', 'Europe/Minsk'),
                            ('Europe/Brussels', 'Europe/Brussels'),
                            ('America/Belize', 'America/Belize'),
                            ('Africa/Porto-Novo', 'Africa/Porto-Novo'),
                            ('Atlantic/Bermuda', 'Atlantic/Bermuda'),
                            ('Asia/Thimphu', 'Asia/Thimphu'),
                            ('Europe/Sarajevo', 'Europe/Sarajevo'),
                            ('Africa/Gaborone', 'Africa/Gaborone'),
                            ('Antarctica/Troll', 'Antarctica/Troll'),
                            ('America/Sao_Paulo', 'America/Sao_Paulo'),
                            ('Indian/Chagos', 'Indian/Chagos'),
                            ('Asia/Brunei', 'Asia/Brunei'),
                            ('Europe/Sofia', 'Europe/Sofia'),
                            ('Africa/Ouagadougou', 'Africa/Ouagadougou'),
                            ('Africa/Bujumbura', 'Africa/Bujumbura'),
                            ('Asia/Phnom_Penh', 'Asia/Phnom_Penh'),
                            ('Africa/Douala', 'Africa/Douala'),
                            ('America/Toronto', 'America/Toronto'),
                            ('Atlantic/Cape_Verde', 'Atlantic/Cape_Verde'),
                            ('America/Cayman', 'America/Cayman'),
                            ('Africa/Bangui', 'Africa/Bangui'),
                            ('Africa/Ndjamena', 'Africa/Ndjamena'),
                            ('America/Santiago', 'America/Santiago'),
                            ('Asia/Shanghai', 'Asia/Shanghai'),
                            ('Asia/Perth', 'Asia/Perth'),
                            ('America/Bogota', 'America/Bogota'),
                            ('Indian/Comoro', 'Indian/Comoro'),
                            ('Africa/Brazzaville', 'Africa/Brazzaville'),
                            ('Africa/Kinshasa', 'Africa/Kinshasa'),
                            ('Pacific/Rarotonga', 'Pacific/Rarotonga'),
                            ('America/Costa_Rica', 'America/Costa_Rica'),
                            ('Europe/Zagreb', 'Europe/Zagreb'),
                            ('America/Havana', 'America/Havana'),
                            ('Asia/Nicosia', 'Asia/Nicosia'),
                            ('Europe/Prague', 'Europe/Prague'),
                            ('Europe/Copenhagen', 'Europe/Copenhagen'),
                            ('Africa/Djibouti', 'Africa/Djibouti'),
                            ('America/Dominica', 'America/Dominica'),
                            ('America/Santo_Domingo', 'America/Santo_Domingo'),
                            ('America/Guayaquil', 'America/Guayaquil'),
                            ('Africa/Cairo', 'Africa/Cairo'),
                            ('America/El_Salvador', 'America/El_Salvador'),
                            ('Africa/Malabo', 'Africa/Malabo'),
                            ('Africa/Asmara', 'Africa/Asmara'),
                            ('Europe/Tallinn', 'Europe/Tallinn'),
                            ('Africa/Addis_Ababa', 'Africa/Addis_Ababa'),
                            ('Atlantic/Stanley', 'Atlantic/Stanley'),
                            ('Atlantic/Faroe', 'Atlantic/Faroe'),
                            ('Pacific/Fiji', 'Pacific/Fiji'),
                            ('Europe/Helsinki', 'Europe/Helsinki'),
                            ('Europe/Paris', 'Europe/Paris'),
                            ('America/Cayenne', 'America/Cayenne'),
                            ('Pacific/Tahiti', 'Pacific/Tahiti'),
                            ('Indian/Kerguelen', 'Indian/Kerguelen'),
                            ('Africa/Libreville', 'Africa/Libreville'),
                            ('Africa/Banjul', 'Africa/Banjul'),
                            ('Asia/Tbilisi', 'Asia/Tbilisi'),
                            ('Europe/Berlin', 'Europe/Berlin'),
                            ('Africa/Accra', 'Africa/Accra'),
                            ('Europe/Gibraltar', 'Europe/Gibraltar'),
                            ('Europe/Athens', 'Europe/Athens'),
                            ('America/Godthab', 'America/Godthab'),
                            ('America/Grenada', 'America/Grenada'),
                            ('America/Guadeloupe', 'America/Guadeloupe'),
                            ('Pacific/Guam', 'Pacific/Guam'),
                            ('America/Guatemala', 'America/Guatemala'),
                            ('Europe/Guernsey', 'Europe/Guernsey'),
                            ('Africa/Conakry', 'Africa/Conakry'),
                            ('Africa/Bissau', 'Africa/Bissau'),
                            ('America/Guyana', 'America/Guyana'),
                            ('America/Port-au-Prince', 'America/Port-au-Prince'),
                            ('Europe/Vatican', 'Europe/Vatican'),
                            ('America/Tegucigalpa', 'America/Tegucigalpa'),
                            ('Asia/Hong_Kong', 'Asia/Hong_Kong'),
                            ('Europe/Budapest', 'Europe/Budapest'),
                            ('Atlantic/Reykjavik', 'Atlantic/Reykjavik'),
                            ('Asia/Kolkata', 'Asia/Kolkata'),
                            ('Asia/Jakarta', 'Asia/Jakarta'),
                            ('Asia/Tehran', 'Asia/Tehran'),
                            ('Asia/Baghdad', 'Asia/Baghdad'),
                            ('Europe/Dublin', 'Europe/Dublin'),
                            ('Asia/Jerusalem', 'Asia/Jerusalem'),
                            ('Europe/Rome', 'Europe/Rome'),
                            ('America/Jamaica', 'America/Jamaica'),
                            ('Asia/Tokyo', 'Asia/Tokyo'),
                            ('Europe/London', 'Europe/London'),
                            ('Asia/Amman', 'Asia/Amman'),
                            ('Asia/Almaty', 'Asia/Almaty'),
                            ('Africa/Nairobi', 'Africa/Nairobi'),
                            ('Pacific/Tarawa', 'Pacific/Tarawa'),
                            ('Asia/Pyongyang', 'Asia/Pyongyang'),
                            ('Asia/Seoul', 'Asia/Seoul'),
                            ('Asia/Kuwait', 'Asia/Kuwait'),
                            ('Asia/Bishkek', 'Asia/Bishkek'),
                            ('Asia/Vientiane', 'Asia/Vientiane'),
                            ('Europe/Riga', 'Europe/Riga'),
                            ('Asia/Beirut', 'Asia/Beirut'),
                            ('Africa/Maseru', 'Africa/Maseru'),
                            ('Africa/Monrovia', 'Africa/Monrovia'),
                            ('Africa/Tripoli', 'Africa/Tripoli'),
                            ('Europe/Vaduz', 'Europe/Vaduz'),
                            ('Europe/Vilnius', 'Europe/Vilnius'),
                            ('Europe/Luxembourg', 'Europe/Luxembourg'),
                            ('Asia/Macau', 'Asia/Macau'),
                            ('Europe/Skopje', 'Europe/Skopje'),
                            ('Indian/Antananarivo', 'Indian/Antananarivo'),
                            ('Africa/Blantyre', 'Africa/Blantyre'),
                            ('Asia/Kuala_Lumpur', 'Asia/Kuala_Lumpur'),
                            ('Indian/Maldives', 'Indian/Maldives'),
                            ('Africa/Bamako', 'Africa/Bamako'),
                            ('Europe/Malta', 'Europe/Malta'),
                            ('Pacific/Majuro', 'Pacific/Majuro'),
                            ('America/Martinique', 'America/Martinique'),
                            ('Africa/Nouakchott', 'Africa/Nouakchott'),
                            ('Indian/Mauritius', 'Indian/Mauritius'),
                            ('Indian/Mayotte', 'Indian/Mayotte'),
                            ('Pacific/Chuuk', 'Pacific/Chuuk'),
                            ('Europe/Chisinau', 'Europe/Chisinau'),
                            ('Europe/Monaco', 'Europe/Monaco'),
                            ('Asia/Ulaanbaatar', 'Asia/Ulaanbaatar'),
                            ('Europe/Podgorica', 'Europe/Podgorica'),
                            ('America/Montserrat', 'America/Montserrat'),
                            ('Africa/Casablanca', 'Africa/Casablanca'),
                            ('Africa/Maputo', 'Africa/Maputo'),
                            ('Asia/Yangon', 'Asia/Yangon'),
                            ('Africa/Windhoek', 'Africa/Windhoek'),
                            ('Pacific/Nauru', 'Pacific/Nauru'),
                            ('Asia/Kathmandu', 'Asia/Kathmandu'),
                            ('Europe/Amsterdam', 'Europe/Amsterdam'),
                            ('America/Curacao', 'America/Curacao'),
                            ('Pacific/Noumea', 'Pacific/Noumea'),
                            ('Pacific/Auckland', 'Pacific/Auckland'),
                            ('America/Managua', 'America/Managua'),
                            ('Africa/Niamey', 'Africa/Niamey'),
                            ('Africa/Lagos', 'Africa/Lagos'),
                            ('Pacific/Niue', 'Pacific/Niue'),
                            ('Pacific/Norfolk', 'Pacific/Norfolk'),
                            ('Pacific/Saipan', 'Pacific/Saipan'),
                            ('Europe/Oslo', 'Europe/Oslo'),
                            ('Asia/Muscat', 'Asia/Muscat'),
                            ('Asia/Karachi', 'Asia/Karachi'),
                            ('Pacific/Palau', 'Pacific/Palau'),
                            ('Asia/Gaza', 'Asia/Gaza'),
                            ('America/Panama', 'America/Panama'),
                            ('Pacific/Port_Moresby', 'Pacific/Port_Moresby'),
                            ('America/Asuncion', 'America/Asuncion'),
                            ('America/Lima', 'America/Lima'),
                            ('Asia/Manila', 'Asia/Manila'),
                            ('Pacific/Pitcairn', 'Pacific/Pitcairn'),
                            ('Europe/Warsaw', 'Europe/Warsaw'),
                            ('Europe/Lisbon', 'Europe/Lisbon'),
                            ('America/Puerto_Rico', 'America/Puerto_Rico'),
                            ('Asia/Qatar', 'Asia/Qatar'),
                            ('Indian/Reunion', 'Indian/Reunion'),
                            ('Europe/Bucharest', 'Europe/Bucharest'),
                            ('Europe/Moscow', 'Europe/Moscow'),
                            ('Africa/Kigali', 'Africa/Kigali'),
                            ('Africa/Ascension', 'Africa/Ascension'),
                            ('America/St_Kitts', 'America/St_Kitts'),
                            ('America/St_Lucia', 'America/St_Lucia'),
                            ('America/Miquelon', 'America/Miquelon'),
                            ('America/St_Vincent', 'America/St_Vincent'),
                            ('Pacific/Apia', 'Pacific/Apia'),
                            ('Europe/San_Marino', 'Europe/San_Marino'),
                            ('Africa/Sao_Tome', 'Africa/Sao_Tome'),
                            ('Asia/Riyadh', 'Asia/Riyadh'),
                            ('Africa/Dakar', 'Africa/Dakar'),
                            ('Europe/Belgrade', 'Europe/Belgrade'),
                            ('Indian/Mahe', 'Indian/Mahe'),
                            ('Africa/Freetown', 'Africa/Freetown'),
                            ('Asia/Singapore', 'Asia/Singapore'),
                            ('Europe/Bratislava', 'Europe/Bratislava'),
                            ('Europe/Ljubljana', 'Europe/Ljubljana'),
                            ('Pacific/Guadalcanal', 'Pacific/Guadalcanal'),
                            ('Africa/Mogadishu', 'Africa/Mogadishu'),
                            ('Africa/Johannesburg', 'Africa/Johannesburg'),
                            ('Atlantic/South_Georgia', 'Atlantic/South_Georgia'),
                            ('Europe/Madrid', 'Europe/Madrid'),
                            ('Asia/Colombo', 'Asia/Colombo'),
                            ('Africa/Khartoum', 'Africa/Khartoum'),
                            ('America/Paramaribo', 'America/Paramaribo'),
                            ('Arctic/Longyearbyen', 'Arctic/Longyearbyen'),
                            ('Africa/Mbabane', 'Africa/Mbabane'),
                            ('Europe/Stockholm', 'Europe/Stockholm'),
                            ('Europe/Zurich', 'Europe/Zurich'),
                            ('Asia/Damascus', 'Asia/Damascus'),
                            ('Asia/Taipei', 'Asia/Taipei'),
                            ('Asia/Dushanbe', 'Asia/Dushanbe'),
                            ('Africa/Dar_es_Salaam', 'Africa/Dar_es_Salaam'),
                            ('Asia/Bangkok', 'Asia/Bangkok'),
                            ('Asia/Dili', 'Asia/Dili'),
                            ('Africa/Lome', 'Africa/Lome'),
                            ('Pacific/Fakaofo', 'Pacific/Fakaofo'),
                            ('Pacific/Tongatapu', 'Pacific/Tongatapu'),
                            ('America/Port_of_Spain', 'America/Port_of_Spain'),
                            ('Africa/Tunis', 'Africa/Tunis'),
                            ('Europe/Istanbul', 'Europe/Istanbul'),
                            ('Asia/Ashgabat', 'Asia/Ashgabat'),
                            ('America/Grand_Turk', 'America/Grand_Turk'),
                            ('Pacific/Funafuti', 'Pacific/Funafuti'),
                            ('Africa/Kampala', 'Africa/Kampala'),
                            ('Europe/Kiev', 'Europe/Kiev'),
                            ('Asia/Dubai', 'Asia/Dubai'),
                            ('America/New_York', 'America/New_York'),
                            ('America/Montevideo', 'America/Montevideo'),
                            ('Asia/Tashkent', 'Asia/Tashkent'),
                            ('Pacific/Efate', 'Pacific/Efate'),
                            ('America/Caracas', 'America/Caracas'),
                            ('Asia/Ho_Chi_Minh', 'Asia/Ho_Chi_Minh'),
                            ('America/Tortola', 'America/Tortola'),
                            ('America/St_Thomas', 'America/St_Thomas'),
                            ('Pacific/Wallis', 'Pacific/Wallis'),
                            ('Africa/El_Aaiun', 'Africa/El_Aaiun'),
                            ('Asia/Aden', 'Asia/Aden'),
                            ('Africa/Lusaka', 'Africa/Lusaka'),
                            ('Africa/Harare', 'Africa/Harare'),
                        ],
                        default='America/Mexico_City',
                        max_length=255,
                        verbose_name='Timezone',
                    ),
                ),
                (
                    'currency_code',
                    models.CharField(
                        choices=[
                            ('AED', 'AED'),
                            ('AFN', 'AFN'),
                            ('ALL', 'ALL'),
                            ('AMD', 'AMD'),
                            ('ANG', 'ANG'),
                            ('AOA', 'AOA'),
                            ('ARS', 'ARS'),
                            ('AUD', 'AUD'),
                            ('AWG', 'AWG'),
                            ('AZN', 'AZN'),
                            ('BAM', 'BAM'),
                            ('BBD', 'BBD'),
                            ('BDT', 'BDT'),
                            ('BGN', 'BGN'),
                            ('BHD', 'BHD'),
                            ('BIF', 'BIF'),
                            ('BMD', 'BMD'),
                            ('BND', 'BND'),
                            ('BOB', 'BOB'),
                            ('BOV', 'BOV'),
                            ('BRL', 'BRL'),
                            ('BSD', 'BSD'),
                            ('BTN', 'BTN'),
                            ('BWP', 'BWP'),
                            ('BYR', 'BYR'),
                            ('BYN', 'BYN'),
                            ('BZD', 'BZD'),
                            ('CAD', 'CAD'),
                            ('CDF', 'CDF'),
                            ('CHE', 'CHE'),
                            ('CHF', 'CHF'),
                            ('CHW', 'CHW'),
                            ('CLF', 'CLF'),
                            ('CLP', 'CLP'),
                            ('CNY', 'CNY'),
                            ('COP', 'COP'),
                            ('COU', 'COU'),
                            ('CRC', 'CRC'),
                            ('CUC', 'CUC'),
                            ('CUP', 'CUP'),
                            ('CVE', 'CVE'),
                            ('CZK', 'CZK'),
                            ('DJF', 'DJF'),
                            ('DKK', 'DKK'),
                            ('DOP', 'DOP'),
                            ('DZD', 'DZD'),
                            ('EGP', 'EGP'),
                            ('ERN', 'ERN'),
                            ('ETB', 'ETB'),
                            ('EUR', 'EUR'),
                            ('STN', 'STN'),
                            ('FJD', 'FJD'),
                            ('FKP', 'FKP'),
                            ('GBP', 'GBP'),
                            ('GEL', 'GEL'),
                            ('GHS', 'GHS'),
                            ('GIP', 'GIP'),
                            ('GMD', 'GMD'),
                            ('GNF', 'GNF'),
                            ('GTQ', 'GTQ'),
                            ('GGP', 'GGP'),
                            ('GYD', 'GYD'),
                            ('HKD', 'HKD'),
                            ('HNL', 'HNL'),
                            ('HRK', 'HRK'),
                            ('HTG', 'HTG'),
                            ('HUF', 'HUF'),
                            ('IDR', 'IDR'),
                            ('ILS', 'ILS'),
                            ('INR', 'INR'),
                            ('IQD', 'IQD'),
                            ('IRR', 'IRR'),
                            ('ISK', 'ISK'),
                            ('JMD', 'JMD'),
                            ('JOD', 'JOD'),
                            ('JPY', 'JPY'),
                            ('KES', 'KES'),
                            ('KGS', 'KGS'),
                            ('KHR', 'KHR'),
                            ('KMF', 'KMF'),
                            ('KPW', 'KPW'),
                            ('KRW', 'KRW'),
                            ('KWD', 'KWD'),
                            ('KYD', 'KYD'),
                            ('KZT', 'KZT'),
                            ('LAK', 'LAK'),
                            ('LBP', 'LBP'),
                            ('LKR', 'LKR'),
                            ('LRD', 'LRD'),
                            ('LSL', 'LSL'),
                            ('LTL', 'LTL'),
                            ('LVL', 'LVL'),
                            ('LYD', 'LYD'),
                            ('MAD', 'MAD'),
                            ('MDL', 'MDL'),
                            ('MGA', 'MGA'),
                            ('MKD', 'MKD'),
                            ('MMK', 'MMK'),
                            ('MNT', 'MNT'),
                            ('MOP', 'MOP'),
                            ('MRO', 'MRO'),
                            ('MUR', 'MUR'),
                            ('MVR', 'MVR'),
                            ('MWK', 'MWK'),
                            ('MXN', 'MXN'),
                            ('MXV', 'MXV'),
                            ('MYR', 'MYR'),
                            ('MZN', 'MZN'),
                            ('NAD', 'NAD'),
                            ('NGN', 'NGN'),
                            ('NIO', 'NIO'),
                            ('NOK', 'NOK'),
                            ('NPR', 'NPR'),
                            ('NZD', 'NZD'),
                            ('OMR', 'OMR'),
                            ('PAB', 'PAB'),
                            ('PEN', 'PEN'),
                            ('PGK', 'PGK'),
                            ('PHP', 'PHP'),
                            ('PKR', 'PKR'),
                            ('PLN', 'PLN'),
                            ('PYG', 'PYG'),
                            ('QAR', 'QAR'),
                            ('RON', 'RON'),
                            ('RSD', 'RSD'),
                            ('RUB', 'RUB'),
                            ('RWF', 'RWF'),
                            ('SAR', 'SAR'),
                            ('SBD', 'SBD'),
                            ('SCR', 'SCR'),
                            ('SDG', 'SDG'),
                            ('SEK', 'SEK'),
                            ('SGD', 'SGD'),
                            ('SHP', 'SHP'),
                            ('SLL', 'SLL'),
                            ('SOS', 'SOS'),
                            ('SRD', 'SRD'),
                            ('SSP', 'SSP'),
                            ('STD', 'STD'),
                            ('SYP', 'SYP'),
                            ('SZL', 'SZL'),
                            ('THB', 'THB'),
                            ('TJS', 'TJS'),
                            ('TMT', 'TMT'),
                            ('TND', 'TND'),
                            ('TOP', 'TOP'),
                            ('TRY', 'TRY'),
                            ('TTD', 'TTD'),
                            ('TWD', 'TWD'),
                            ('TZS', 'TZS'),
                            ('UAH', 'UAH'),
                            ('UGX', 'UGX'),
                            ('USD', 'USD'),
                            ('USN', 'USN'),
                            ('USS', 'USS'),
                            ('UYI', 'UYI'),
                            ('UYU', 'UYU'),
                            ('UZS', 'UZS'),
                            ('VEF', 'VEF'),
                            ('VND', 'VND'),
                            ('VUV', 'VUV'),
                            ('WST', 'WST'),
                            ('XAF', 'XAF'),
                            ('XAG', 'XAG'),
                            ('XAU', 'XAU'),
                            ('XBA', 'XBA'),
                            ('XBB', 'XBB'),
                            ('XBC', 'XBC'),
                            ('XBD', 'XBD'),
                            ('XCD', 'XCD'),
                            ('XDR', 'XDR'),
                            ('XFU', 'XFU'),
                            ('XOF', 'XOF'),
                            ('XPD', 'XPD'),
                            ('XPF', 'XPF'),
                            ('XPT', 'XPT'),
                            ('XTS', 'XTS'),
                            ('XXX', 'XXX'),
                            ('YER', 'YER'),
                            ('ZAR', 'ZAR'),
                            ('ZMW', 'ZMW'),
                            ('ZWL', 'ZWL'),
                        ],
                        default='MXN',
                        max_length=3,
                        verbose_name='Currency',
                    ),
                ),
                (
                    'logo',
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        null=True,
                        upload_to=src.common.database.models.tenant.tenants_logos_path,
                        verbose_name='Logo',
                    ),
                ),
                (
                    'grace_period',
                    models.PositiveSmallIntegerField(default=5, verbose_name='Grace Period'),
                ),
                (
                    'checkin_from_in_hours',
                    models.PositiveSmallIntegerField(
                        default=6,
                        help_text='Time window to checkin from in hours',
                        verbose_name='Checkin From Hours',
                    ),
                ),
                (
                    'checkin_until_in_hours',
                    models.PositiveSmallIntegerField(
                        default=6,
                        help_text='Time window to checkin until in hours',
                        verbose_name='Checkin Until Hours',
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('ACTIVE', 'ACTIVE'),
                            ('PENDING', 'PENDING'),
                            ('INACTIVE', 'INACTIVE'),
                            ('SUSPENDED', 'SUSPENDED'),
                        ],
                        default='PENDING',
                        max_length=60,
                    ),
                ),
                (
                    'refresh_expiration_on_passes',
                    models.BooleanField(
                        default=False,
                        help_text='If enabled, when a bundle passes membership is renewed, its expiration will be refreshed',
                        verbose_name='Refresh Expiration on Passes?',
                    ),
                ),
                (
                    'membership_changes_with_remaining',
                    models.BooleanField(
                        default=False,
                        help_text='If enabled, when a membership plan is changed in a membership change, its expiration or passes will be refilled with the remaining',
                        verbose_name='Refill passes on changes?',
                    ),
                ),
                (
                    'max_free_trials',
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text='Max number of free trials that a user can have by class',
                        verbose_name='Max Free Trials',
                    ),
                ),
                (
                    'days_between_trials',
                    models.PositiveSmallIntegerField(
                        default=365,
                        help_text='Max number of days between free trials that a user can have by class',
                        verbose_name='Days Between Trials',
                    ),
                ),
                (
                    'num_whatsapp_sessions',
                    models.PositiveSmallIntegerField(
                        default=1,
                        help_text='Number of WhatsApp Sessions that the tenant has',
                        verbose_name='Max Whatsapp Sessions',
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='owned_organizations',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='Owner',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
                'db_table': 'tenants',
            },
        ),
        migrations.CreateModel(
            name='PendingActionORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'category',
                    models.CharField(
                        choices=[
                            ('USER_RESET_PASSWORD', 'USER_RESET_PASSWORD'),
                            ('EMAIL_ADDRESS_VERIFICATION', 'EMAIL_ADDRESS_VERIFICATION'),
                            ('PHONE_NUMBER_VERIFICATION', 'PHONE_NUMBER_VERIFICATION'),
                            (
                                'TENANT_CUSTOMER_SESSION_REDEMPTION',
                                'TENANT_CUSTOMER_SESSION_REDEMPTION',
                            ),
                            ('TENANT_USER_INVITATION', 'TENANT_USER_INVITATION'),
                        ],
                        db_index=True,
                        max_length=50,
                        verbose_name='Category',
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('PENDING', 'PENDING'),
                            ('COMPLETED', 'COMPLETED'),
                            ('EXPIRED', 'EXPIRED'),
                        ],
                        db_index=True,
                        default='PENDING',
                        max_length=50,
                        verbose_name='Status',
                    ),
                ),
                (
                    'token',
                    models.CharField(
                        db_index=True,
                        default=src.common.database.models.pending_action.generate_hex,
                        max_length=120,
                        unique=True,
                        verbose_name='Token',
                    ),
                ),
                (
                    'tracking_code',
                    models.CharField(
                        db_index=True,
                        default=src.common.database.models.pending_action.generate_hex,
                        max_length=120,
                        unique=True,
                        verbose_name='Tracking Code',
                    ),
                ),
                (
                    'group_id',
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=128,
                        null=True,
                        verbose_name='Group Id',
                    ),
                ),
                (
                    'expired_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='Expired At'),
                ),
                (
                    'completed_at',
                    models.DateTimeField(blank=True, null=True, verbose_name='Completed At'),
                ),
                (
                    'valid_until',
                    models.DateTimeField(
                        blank=True,
                        help_text='The date until the token is valid, null means it never expires',
                        null=True,
                        verbose_name='Valid Until',
                    ),
                ),
                (
                    'usage_limit',
                    models.PositiveIntegerField(
                        default=1,
                        help_text='How many times the token can be used',
                        verbose_name='Usage Limit',
                    ),
                ),
                (
                    'usage',
                    models.PositiveIntegerField(
                        default=0,
                        help_text='How many times the token has been used',
                        verbose_name='Usage',
                    ),
                ),
                (
                    'metadata',
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text='This field changes according to the type of action',
                        verbose_name='Metadata',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='pending_actions',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='User',
                    ),
                ),
                (
                    'tenant',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='database.tenantorm',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Pending Action',
                'verbose_name_plural': 'Pending Actions',
                'db_table': 'pending_actions',
            },
        ),
        migrations.AddField(
            model_name='userorm',
            name='current_tenant',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to='database.tenantorm',
                verbose_name='Current Tenant',
            ),
        ),
        migrations.CreateModel(
            name='TenantUserORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'first_name',
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=100,
                        null=True,
                        verbose_name='First Name',
                    ),
                ),
                (
                    'paternal_surname',
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=150,
                        null=True,
                        verbose_name='Paternal Surname',
                    ),
                ),
                (
                    'maternal_surname',
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name='Maternal Surname'
                    ),
                ),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                (
                    'gender',
                    models.CharField(
                        blank=True,
                        choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')],
                        max_length=25,
                        null=True,
                        verbose_name='Gender',
                    ),
                ),
                (
                    'photo',
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        null=True,
                        upload_to=src.common.database.models.mixins.users.photos_folder,
                        verbose_name='Photo',
                    ),
                ),
                (
                    'lang',
                    models.CharField(
                        choices=[('es', 'es'), ('en', 'en')],
                        default='es',
                        max_length=3,
                        verbose_name='Language',
                    ),
                ),
                ('is_owner', models.BooleanField(default=False, verbose_name='Is Owner')),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('PENDING', 'PENDING'),
                            ('ACTIVE', 'ACTIVE'),
                            ('INACTIVE', 'INACTIVE'),
                        ],
                        default='PENDING',
                        max_length=25,
                        verbose_name='Status',
                    ),
                ),
                (
                    'tenant',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='database.tenantorm'
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='User',
                    ),
                ),
            ],
            options={
                'verbose_name': 'Tenant User',
                'verbose_name_plural': 'Tenant Users',
                'db_table': 'tenant_users',
            },
        ),
        migrations.CreateModel(
            name='TenantWhatsappSessionORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'session_name',
                    models.CharField(
                        db_index=True, max_length=255, unique=True, verbose_name='Session Name'
                    ),
                ),
                (
                    'phone_number',
                    models.CharField(
                        blank=True,
                        help_text='Phone Number of the WhatsApp Account',
                        max_length=255,
                        null=True,
                        verbose_name='Phone Number',
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('STARTING', 'STARTING'),
                            ('STOPPED', 'STOPPED'),
                            ('SCAN_QR_CODE', 'SCAN_QR_CODE'),
                            ('FAILED', 'FAILED'),
                            ('WORKING', 'WORKING'),
                        ],
                        default='STARTING',
                        max_length=50,
                        verbose_name='Status',
                    ),
                ),
                (
                    'messaging_enabled',
                    models.BooleanField(default=True, verbose_name='Messaging Enabled'),
                ),
                (
                    'agents_enabled',
                    models.BooleanField(default=True, verbose_name='Agents Enabled'),
                ),
                (
                    'config',
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text='Configuration of the WhatsApp Session',
                        verbose_name='Config',
                    ),
                ),
                (
                    'tenant',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='database.tenantorm'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Tenant WhatsApp Session',
                'verbose_name_plural': 'Tenant WhatsApp Session',
                'db_table': 'tenant_whatsapp_sessions',
            },
        ),
        migrations.CreateModel(
            name='TenantCustomerORM',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'uuid',
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name='UUID',
                    ),
                ),
                (
                    'first_name',
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=100,
                        null=True,
                        verbose_name='First Name',
                    ),
                ),
                (
                    'paternal_surname',
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=150,
                        null=True,
                        verbose_name='Paternal Surname',
                    ),
                ),
                (
                    'maternal_surname',
                    models.CharField(
                        blank=True, max_length=150, null=True, verbose_name='Maternal Surname'
                    ),
                ),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth Date')),
                (
                    'gender',
                    models.CharField(
                        blank=True,
                        choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')],
                        max_length=25,
                        null=True,
                        verbose_name='Gender',
                    ),
                ),
                (
                    'photo',
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        null=True,
                        upload_to=src.common.database.models.mixins.users.photos_folder,
                        verbose_name='Photo',
                    ),
                ),
                (
                    'lang',
                    models.CharField(
                        choices=[('es', 'es'), ('en', 'en')],
                        default='es',
                        max_length=3,
                        verbose_name='Language',
                    ),
                ),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('NEW', 'NEW'),
                            ('LEAD', 'LEAD'),
                            ('ACTIVE', 'ACTIVE'),
                            ('INACTIVE', 'INACTIVE'),
                            ('CANCELLED', 'CANCELLED'),
                        ],
                        default='NEW',
                        max_length=25,
                        verbose_name='Status',
                    ),
                ),
                (
                    'creation_source',
                    models.CharField(
                        choices=[
                            ('UNDEFINED', 'UNDEFINED'),
                            ('TENANT_PAGE', 'TENANT_PAGE'),
                            ('MOBILE_ADMIN', 'MOBILE_ADMIN'),
                            ('WEB_ADMIN', 'WEB_ADMIN'),
                            ('WHATSAPP', 'WHATSAPP'),
                        ],
                        default='UNDEFINED',
                        max_length=50,
                        verbose_name='Creation Source',
                    ),
                ),
                (
                    'email_address',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='database.emailaddressorm',
                        verbose_name='Email Address',
                    ),
                ),
                (
                    'phone_number',
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to='database.phonenumberorm',
                        verbose_name='Phone Number',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='customers',
                        to=settings.AUTH_USER_MODEL,
                        verbose_name='User',
                    ),
                ),
                (
                    'tenant',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='database.tenantorm'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Tenant Customer',
                'verbose_name_plural': 'Tenant Customers',
                'db_table': 'tenant_customers',
                'constraints': [
                    models.UniqueConstraint(
                        fields=('user', 'tenant'), name='unique_tenant_customer'
                    ),
                    models.UniqueConstraint(
                        fields=('tenant', 'email_address'),
                        name='unique_tenant_customer_email_address',
                    ),
                    models.UniqueConstraint(
                        fields=('tenant', 'phone_number'),
                        name='unique_tenant_customer_phone_number',
                    ),
                ],
            },
        ),
        migrations.AddConstraint(
            model_name='userorm',
            constraint=models.UniqueConstraint(
                fields=('email_address',), name='unique_user_email_address'
            ),
        ),
        migrations.AddConstraint(
            model_name='userorm',
            constraint=models.UniqueConstraint(
                fields=('phone_number',), name='unique_user_phone_number'
            ),
        ),
        migrations.AddConstraint(
            model_name='tenantuserorm',
            constraint=models.UniqueConstraint(
                fields=('user', 'tenant'), name='unique_tenant_user'
            ),
        ),
    ]
